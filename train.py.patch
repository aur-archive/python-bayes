--- train.py	(original)
+++ train.py	(refactored)
@@ -1,10 +1,10 @@
 #!/usr/bin/env python
-import cPickle as pickle
+import pickle as pickle
 import json
 import time
-from backends import RedisBackend
-from bayes import NaiveBayes
-from classifiers import FMClassifier
+from .backends import RedisBackend
+from .bayes import NaiveBayes
+from .classifiers import FMClassifier
 from optparse import OptionParser
 parser = OptionParser(conflict_handler='resolve')
 parser.add_option('-h', dest='host')
@@ -17,13 +17,13 @@
 
 _start = time.time()
 for file_name in args:
-    print 'Training file %s' % file_name
+    print('Training file %s' % file_name)
     fd = open(file_name, 'r')
     _counter = 0
     for line in fd:
         _counter += 1
         if _counter % 100000 == 0:
-            print _counter, (time.time() - _start)
+            print(_counter, (time.time() - _start))
         # if _counter % 1000000 == 0:
         #     break
         # grab args
@@ -32,5 +32,5 @@
         count = int(count)
         bayes.train([vector] * count)
 
-print 'Trained in %0.2f seconds' % (time.time() - _start)
+print('Trained in %0.2f seconds' % (time.time() - _start))
 
